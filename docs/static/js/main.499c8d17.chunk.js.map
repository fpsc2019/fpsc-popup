{"version":3,"sources":["logo.png","server.js","component/SelectAccount.js","Lang.js","component/contract.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","host","Axios","api","bizData","pageData","callback","data","base","timestamp","sign","biz","page","axios","post","then","response","catch","error","_method","_params","id","jsonrpc","method","params","console","log","tmpPkr","Option","window","location","dapp","name","contractAddress","github","author","url","logo","SelectAccount","props","handleOk","e","that","accounts","state","ac","MainPKr","selectAccount","hiddenAccount","handleCancel","onChange","v","accountOptions","this","seropp","init","res","getAccounts","pk","slice","getAccountList","dataArray","i","tmpArr","acName","Name","push","value","key","formatPK","PK","setState","title","visible","onOk","onCancel","showSearch","style","width","placeholder","Component","Lang","zh_CN","project","balanceSero","account","utxo","contract","swith","estimatedTotal","dayIncome","staticIncome","withdraw","detail","referId","areaId","totalInvest","profitLevel","latestTime","totalReturn","totalReturnDay","recommend","staticIncomeTips","staticIncomeTips2","investDetail","myIncome","areaTotal","areaOtherTotal","staticReward","recommendReward","nobilityReward","vipReward","viewCode","button","deposit","invest","trigger","close","copy","modal","buyAsnow","amount","amountPlace","rate","exchange","password","passwordPlace","amountTips","availableHAPY","availableExchange","total","estimate","tips","toast","lessAmount","minInvest","tx","copySuccess","en_US","Contract","address","abi","ct","Language","Header","Content","Footer","ABI","serojs","callContract","decimal","BigNumber","pow","Countdown","document","href","protocol","openNotificationWithIcon","type","message","desc","notification","description","wordBreak","whiteSpace","wordWrap","duration","InvestForm","create","confirmLoading","estimateReturn","estimateLevel","setTimeout","totalAmount","plus","parseFloat","toFixed","sero","onCreate","form","getFieldDecorator","setFieldsValue","lang","layout","Item","label","rules","required","disabled","autoComplete","min","precision","max","step","staticTotal","allowClear","color","multipliedBy","React","ContentPage","currentAccount","showAccountSelect","loading","localStorage","setItem","reload","checked","showDeposit","handleInvestCancel","showInvest","handleInvestCreate","cb","formRef2","validateFields","err","values","amountSero","getFieldValue","ct_details","comparedTo","warn","executeMethod","toString","resetFields","calcuPrincipalProfit","seroHex","callMethod","saveInvestFormRef","formRef","showShareProfit","showWithdraw","modal1Visible","ct_id","getItem","showSelectAccount","getDetail","getContractSeroBalance","setInterval","getAccount","canvas","getElementById","QRCode","toCanvas","ct_balanceOfSero","dividedBy","getAccountDetail","Balance","forEach","currency","identicon","largeAreaId","largeAreaTotal","returnAmount","achievement","recommendNum","parseInt","star","isKing","detailsOfIncome","calcuStaticProfit","args","packData","callParams","from","to","call","callData","unPackData","cy","executeData","gas_price","estimateParam","estimateGas","gas","executeContract","accountName","staticTimestamp","salesPieData","x","y","showChart","countDown","d","Date","setTime","getTime","year","getUTCFullYear","month","getUTCMonth","day","getUTCDate","tz","getTimezoneOffset","nextShareTime","returnPercent","a","b","showCountDown","className","marginTop","padding","background","minHeight","body","clientHeight","itemLayout","size","rowKey","avatar","onClick","span","Meta","shape","src","count","textAlign","dayProfit","format","onFinish","shareProfit","height","percent","hasLegend","animate","subTitle","dangerouslySetInnerHTML","__html","reduce","pre","now","valueFormat","val","dashed","suffix","minus","dateTimestamp","cDate","appendZero","getMonth","getDate","getHours","getMinutes","convertUTCDate","footer","getContainer","success","wrappedComponentRef","ct_rate","App","changeLocale","localeValue","target","locale","zhCN","enUS","Group","Button","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.499c8d17.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.853467d2.png\";","import axios from 'axios';\n\nlet host = \"http://127.0.0.1:2345/\";\n\nclass Axios {\n\n    post(api, bizData, pageData, callback) {\n        let data = {\n            base: {\n                timestamp: 1234567,\n                sign: \"67ff54447b89f06fe4408b89902e585167abad291ec41118167017925e24e320\",\n            },\n            biz: bizData,\n            page: pageData,\n        }\n        axios.post(host + api, data).then(function (response) {\n            let data = response.data\n            if (callback) {\n                callback(data);\n            }\n        }).catch(function (error) {\n\n        })\n    }\n\n    postSeroRpc(_method, _params, callback) {\n        let data = {\n            id: 0,\n            jsonrpc: \"2.0\",\n            method: _method,\n            params: _params,\n        };\n        axios.post(host + \"rpc\", data).then(function (response) {\n            let data = response.data\n            if (callback) {\n                callback(data);\n            }\n        }).catch(function (error) {\n            console.log(\"req error: \",error)\n        })\n    }\n\n    postPullupRpc(_method, _params, callback) {\n        let data = {\n            id: 0,\n            method: _method,\n            params: _params,\n        };\n        axios.post(host + \"pullup_rpc\", data).then(function (response) {\n            let data = response.data\n            if (callback) {\n                callback(data);\n            }\n        }).catch(function (error) {\n\n        })\n    }\n\n}\n\nexport default Axios;","import React, {Component} from 'react'\nimport {Modal, Select} from \"antd\";\nimport Axios from \"../server\";\n// import Pullup from \"pullup-js-sdk\";\nimport seropp from 'sero-pp'\n\nlet tmpPkr = '';\nlet ajax = new Axios();\nconst {Option} = Select;\n\n// var pullup = new Pullup();\n// pullup.setProvider(new pullup.providers.HttpProvider('http://127.0.0.1:2345'));\nlet host = window.location.host;\n\nlet dapp = {\n    name: \"HAPY\",\n    contractAddress: \"54uf2UU9Zf1mgyR25WFpogyMfkgQRJZJKzY6Rfy3nygmjSoBXFE6R8y2RyCeCc1T6aEmaKK8W3Gu6SY8KdTq54x9\",\n    github: \"https://github.com/fpsc2019/fpsc-popup\",\n    author: \"fpsc2019\",\n    url: host+\"/fpsc-popup/\",\n    logo: host+\"/fpsc-popup/logo.png\",\n};\n\nclass SelectAccount extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            accountOptions: [],\n            accounts: [],\n        }\n    }\n\n\n    componentDidMount() {\n        let that = this;\n        seropp.init(dapp, function (res) {\n            if(res){\n                that.getAccounts();\n            }\n        });\n\n    }\n\n    handleOk = e => {\n        let that = this;\n        if (tmpPkr !== '') {\n            let accounts = that.state.accounts;\n            for (let ac of accounts) {\n                if (ac.MainPKr === tmpPkr) {\n                    that.props.selectAccount(ac);\n                }\n            }\n        }\n        that.props.hiddenAccount();\n    };\n\n    handleCancel = e => {\n        let that = this;\n        that.props.hiddenAccount();\n    };\n\n    onChange = (v) => {\n        tmpPkr = v;\n    }\n\n    formatPK(pk) {\n        return pk.slice(0, 10) + \"....\" + pk.slice(-10)\n    }\n\n    getAccounts() {\n        let that = this;\n        // let res = pullup.local.accountList()\n        seropp.getAccountList(function (res) {\n            if (res) {\n                let dataArray = res;\n                let i = 0;\n                let tmpArr = [];\n                for (let ac of dataArray) {\n                    let acName = ac.Name;\n                    i++;\n                    if (!acName) {\n                        acName = \"Account\" + i;\n                    }\n                    tmpArr.push(<Option value={ac.MainPKr} key={i}>{acName + \" \" + that.formatPK(ac.PK)}</Option>)\n                }\n                that.setState({\n                    accountOptions: tmpArr,\n                    accounts: dataArray\n                })\n            }\n        });\n    };\n\n    render() {\n        return (\n            <Modal\n                title=\"Select Account\"\n                visible={this.props.visible}\n                onOk={this.handleOk}\n                onCancel={this.handleCancel}\n            >\n                <Select showSearch\n                        style={{width: '98%'}}\n                        placeholder=\"Select an account\"\n                        onChange={(v) => {\n                            this.onChange(v);\n                        }}\n                >\n                    {this.state.accountOptions}\n                </Select>\n            </Modal>\n        )\n    }\n}\n\n\nexport default SelectAccount","class Lang {\n\n    zh_CN={\n        project:{\n            title:\"合约详情\",\n            contractAddress:\"合约地址\",\n            balanceSero:\"当前余额 (HAPY)\",\n        },\n\n        account:{\n            title:{\n                utxo:\"钱包账户\",\n                contract:\"合约账户\",\n                swith:\"切换账户\",\n                balanceSero:\"余额 (HAPY)\",\n                estimatedTotal:\"预计总收益 (HAPY)\",\n                dayIncome:\"当天返还比例\",\n                staticIncome:\"当天静态返还 (HAPY)\",\n                withdraw:\"可提现金额 (HAPY)\",\n                detail:\"详情\",\n                id:\"编号\",\n                referId:\"推荐人编号\",\n                areaId:\"大区编号\",\n                totalInvest:\"本金\",\n                profitLevel:\"收益倍数\",\n                latestTime:\"最新收益时间\",\n                totalReturn:\"当前返还总数(HAPY)\",\n                totalReturnDay:\"当天返还总数(HAPY)\",\n                recommend:\"下级人数\",\n                staticIncomeTips:\"今天的静态收益已经支付到可提现账户.\",\n                staticIncomeTips2:\"触发收益到提现账户.\",\n                investDetail:\"投资详情\",\n                myIncome:\"我的业绩\",\n                areaTotal:\"大区业绩\",\n                areaOtherTotal:\"业绩总和(不含大区)\",\n\n                staticReward:\"静态返还\",\n                recommendReward:\"推荐奖\",\n                nobilityReward:\"星级奖\",\n                vipReward:\"VIP奖\",\n                viewCode:\"查看智能合约\",\n\n            },\n            button:{\n                deposit:\"充值\",\n                invest:\"投资\",\n                trigger:\"触发收益\",\n                withdraw:\"提现\",\n                close:\"关闭\",\n                copy:\"拷贝\",\n            },\n            modal:{\n                deposit:{\n                    title:\"充值\",\n                    copy:\"拷贝\",\n                },\n\n                buyAsnow:{\n                    amount:\"数量 (HAPY)\",\n                    amountPlace:\"输入数量\",\n                    rate:\"兑换比例\",\n                    exchange:\"兑换\",\n                    password:\"账户密码\",\n                    passwordPlace:\"输入账户密码\",\n                },\n\n                invest:{\n                    title:\"投资\",\n                    referId:\"推荐人编号\",\n                    amount:\"投资金额\",\n                    amountTips:\"100 HAPY起投\",\n                    availableHAPY:\"可用的余额\",\n                    availableExchange:\"最多可抵用\",\n                    total:\"应付合计\",\n                    estimate:\"预计收益\",\n                    password:\"账户密码\",\n                    passwordPlace:\"输入账户密码\",\n                },\n\n                trigger:{\n                    password:\"账户密码\",\n                    passwordPlace:\"输入账户密码\",\n                },\n\n                withdraw:{\n                    password:\"账户密码\",\n                    passwordPlace:\"输入账户密码\",\n                    tips:\"* 提现金额将直接提到UTXO账户.\",\n                },\n            },\n        },\n        toast:{\n            lessAmount:\"HAPY余额不足以支付本次交易.\",\n            minInvest:\"最小投资金额为 100 HAPY.\",\n            tx:\"交易提交成功, 等待区块打包交易, 交易哈希: \",\n            copySuccess:\"拷贝成功! \",\n\n        }\n    };\n\n    en_US={\n        project:{\n            title:\"Contract Info\",\n            contractAddress:\"Contract Address\",\n            balanceSero:\"Current Balance (HAPY)\",\n        },\n\n        account:{\n            title:{\n                utxo:\"Wallet Account\",\n                contract:\"Contract Account\",\n                swith:\"Switch Account\",\n                balanceSero:\"Balance (HAPY)\",\n                estimatedTotal:\"Estimated Total Income (HAPY)\",\n                dayIncome:\"Return rate on the day\",\n                staticIncome:\"Static Return (HAPY)\",\n                withdraw:\"Withdrawal Account (HAPY)\",\n                detail:\"Detail\",\n                id:\"ID\",\n                referId:\"Refer ID\",\n                areaId:\"Large Area ID\",\n                totalInvest:\"Total Invest\",\n                profitLevel:\"Profit Level\",\n                latestTime:\"Latest Share Time\",\n                totalReturn:\"Total Return\",\n                totalReturnDay:\"Total return on the day (HAPY)\",\n                recommend:\"Recommend Number\",\n                staticIncomeTips:\"Your income have been paid to the withdrawal account.\",\n                staticIncomeTips2:\"Trigger to withdrawal account. \",\n                investDetail:\"Invest Info\",\n                myIncome:\"My performance\",\n                areaTotal:\"Regional performance\",\n                areaOtherTotal:\"Total performance (excluding the large region)\",\n\n                staticReward:\"Static\",\n                recommendReward:\"Recommend\",\n                nobilityReward:\"Nobility\",\n                vipReward:\"VIP\",\n                viewCode:\"View Smart Contract\",\n            },\n            button:{\n                deposit:\"Deposit HAPY\",\n                invest:\"Invest\",\n                trigger:\"Trigger Income\",\n                withdraw:\"Withdraw\",\n                close:\"Close\",\n                copy:\"Copy\",\n            },\n            modal:{\n                deposit:{\n                    title:\"Deposit\",\n                    copy:\"COPY\",\n                },\n\n                invest:{\n                    title:\"Invest\",\n                    referId:\"Refer ID\",\n                    amount:\"Invet Amount\",\n                    amountTips:\"At least invest 100 HAPY\",\n                    availableHAPY:\"Available Blance\",\n                    availableExchange:\"Max Exchange\",\n                    total:\"Total\",\n                    estimate:\"Estimated Return\",\n                    password:\"Password\",\n                },\n\n                trigger:{\n                    password:\"Password\",\n                },\n\n                withdraw:{\n                    password:\"Password\",\n                    tips:\"* This is the withdrawal of the amount to the UTXO account.\",\n                },\n            },\n        },\n        toast:{\n            lessAmount:\"The balance is not enough to pay for this transaction.\",\n            minInvest:\"Invest Amount at least 100 HAPY.\",\n            tx:\"The transaction was submitted successfully, waiting for the block to be packaged, and the transaction hash: \",\n            copySuccess:\"Copy to clipboard successfully! \",\n        },\n    }\n}\n\nexport default Lang","class Contract{\n\n    address = \"54uf2UU9Zf1mgyR25WFpogyMfkgQRJZJKzY6Rfy3nygmjSoBXFE6R8y2RyCeCc1T6aEmaKK8W3Gu6SY8KdTq54x9\";\n\n    abi = [{\"constant\":true,\"inputs\":[],\"name\":\"preTotalShare\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalShare\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"refereeCode\",\"type\":\"string\"}],\"name\":\"invest\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"detailsOfIncome\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"triggerStaticProfit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenName\",\"type\":\"string\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preRewardAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setMarketAddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"details\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"registerNode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"findAddrById\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INVEST_CURRENCY\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"calcuStaticProfit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"code\",\"type\":\"string\"}],\"name\":\"codeExist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balanceOfHAPY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastUpdated\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_triggerStaticNum\",\"type\":\"uint256\"}],\"name\":\"setTriggerStaticNum\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_marketAddr\",\"type\":\"address\"},{\"name\":\"_codeServiceAddr\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}];\n\n\n}\n\nexport default Contract","import React, {Component} from 'react';\nimport {\n    Layout,\n    Skeleton,\n    Descriptions,\n    Divider,\n    notification,\n    List,\n    Tag,\n    Avatar,\n    Row,\n    Col,\n    Statistic,\n    Button,\n    Modal,\n    ConfigProvider,\n    Input,\n    Rate,\n    message, Form, InputNumber, Radio\n} from \"antd\";\n\nimport {WaterWave, Pie} from 'ant-design-pro/lib/Charts';\nimport 'ant-design-pro/dist/ant-design-pro.css';\nimport SelectAccount from \"./component/SelectAccount\"\nimport BigNumber from \"bignumber.js\"\nimport serojs from \"serojs\"\n\nimport \"./App.css\"\nimport copy from \"copy-text-to-clipboard\";\nimport QRCode from \"qrcode\";\nimport enUS from 'antd/es/locale/en_US';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport Language from \"./Lang\"\nimport identicon from \"identicon.js\"\nimport Contract from \"./component/contract\"\n// import popup from 'popup-js-sdk'\nimport seropp from 'sero-pp'\nimport logo from \"./logo.png\"\n\nlet ct = new Contract();\nlet Lang = new Language();\nconst {Header, Content, Footer} = Layout;\n\nlet contractAddress = ct.address;\nlet ABI = ct.abi;\n\nlet contract = serojs.callContract(ABI, contractAddress);\n\nlet decimal = new BigNumber(10).pow(18);\nconst {Countdown} = Statistic;\n\nlet dapp = {\n    name: \"HAPY\",\n    contractAddress: \"54uf2UU9Zf1mgyR25WFpogyMfkgQRJZJKzY6Rfy3nygmjSoBXFE6R8y2RyCeCc1T6aEmaKK8W3Gu6SY8KdTq54x9\",\n    github: \"https://github.com/fpsc2019/fpsc-popup\",\n    author: \"HAPY\",\n    url: document.location.href,\n    logo: document.location.protocol + '//' + document.location.host + '/fpsc-popup/logo.png'\n};\n\n\nconst openNotificationWithIcon = (type, message, desc) => {\n    notification[type]({\n        message: message,\n        description: <p style={{wordBreak: 'normal', whiteSpace: 'pre-wrap', wordWrap: 'break-word'}}>{desc}</p>,\n        duration: null,\n    });\n};\n\nconst InvestForm = Form.create({name: 'form_in_modal2'})(\n    class extends React.Component {\n\n        state = {\n            confirmLoading: false,\n            estimateReturn: 0,\n            estimateLevel: 0,\n            amount: 0.000000,\n            total: 0.000000,\n        }\n\n        staticTotal() {\n            let that = this;\n            setTimeout(function () {\n                let total = new BigNumber(that.state.amount);\n                let totalAmount=total.plus(that.props.totalAmount)\n\n                let estimateLevel = 0;\n                if(parseFloat(total)<100) {\n                } else if (parseFloat(totalAmount) >= 100 && parseFloat(totalAmount) < 12500) {\n                    estimateLevel = 3\n                } else if (parseFloat(totalAmount) >= 12500 && parseFloat(totalAmount) < 25000) {\n                    estimateLevel = 4\n                } else if (parseFloat(totalAmount) >= 25000) {\n                    estimateLevel = 5\n                }\n\n                that.setState({\n                    total: total.toFixed(6),\n                    estimateLevel: estimateLevel\n                })\n            }, 10)\n        }\n\n        render() {\n            const {visible, sero, onCancel, onCreate, form, referId} = this.props;\n            const {getFieldDecorator, setFieldsValue} = form;\n\n            setTimeout(function () {\n                if (referId && referId !== 0) {\n                    setFieldsValue({\"ReferId\": referId});\n                }\n            }, 100)\n\n            let that = this;\n            return (\n                <Modal\n                    visible={visible}\n                    title={Lang[that.props.lang].account.modal.invest.title}\n                    onCancel={onCancel}\n                    onOk={() => {\n                        this.setState({\n                            confirmLoading: true\n                        });\n                        setTimeout(function () {\n                            onCreate(function (res) {\n                                that.setState({\n                                    confirmLoading: res\n                                });\n                            });\n                        }, 10)\n                    }}\n                    confirmLoading={this.state.confirmLoading}\n                >\n                    <Form layout=\"vertical\">\n                        <Form.Item label={Lang[that.props.lang].account.modal.invest.referId}>\n                            {getFieldDecorator(`ReferId`, {\n                                rules: [{required: true, message: `Please Input Refer Id`}],\n                            })(<Input style={{width: '60%'}} disabled={!(!referId || referId === 0)}\n                                      placeholder={referId ? referId : \"\"} autoComplete=\"off\"/>)}\n                        </Form.Item>\n                        <Form.Item\n                            label={`${Lang[that.props.lang].account.modal.invest.amount} (Available Balance: ${sero} HAPY)`}>\n                            {getFieldDecorator('AmountSero', {\n                                rules: [{required: true, message: `Please Input Amount! `}],\n                            })(<InputNumber min={0} precision={6} max={parseFloat(sero)} step={100}\n                                            style={{width: '60%'}} onChange={(v) => {\n                                that.setState({amount:v})\n                                that.staticTotal();\n                            }} allowClear placeholder=\"0.000000\" autoComplete=\"off\"/>)}\n                            <br/>HAPY ({Lang[that.props.lang].account.modal.invest.amountTips})\n                        </Form.Item>\n                        <p>{Lang[that.props.lang].account.modal.invest.estimate}: <span\n                            style={{color: '#1DA57A'}}>{that.state.amount}</span> (HAPY) x <span\n                            style={{color: '#1DA57A'}}>{that.state.estimateLevel} </span>(Times) = <strong\n                            style={{color: 'rgb(216, 0, 38)'}}>{new BigNumber(that.state.amount).multipliedBy(that.state.estimateLevel).toFixed(6)} </strong>HAPY\n                        </p>\n\n                        <p>{Lang[that.props.lang].account.modal.invest.total} : <strong\n                            style={{color: 'rgb(216, 0, 38)'}}>{this.state.total}</strong> HAPY</p>\n                    </Form>\n                </Modal>\n            );\n        }\n    },\n);\n\nclass ContentPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            showAccountSelect: false,\n            showDeposit: false,\n            showInvest: false,\n            showShareProfit: false,\n            showWithdraw: false,\n\n            modal1Visible: false,\n\n            currentAccount: {},\n            balanceSero: 0,\n\n            ct_id: 0,\n            ct_details: {},\n\n            lang: \"zh_CN\",\n        }\n    }\n\n    componentWillMount() {\n        let lang = localStorage.getItem(\"lang\");\n        if (!lang) {\n            lang = \"zh_CN\";\n            localStorage.setItem(\"lang\", \"zh_CN\");\n        }\n        this.setState({\n            lang: lang,\n        })\n    }\n\n    componentDidMount() {\n        let that = this;\n        seropp.init(dapp, function (res) {\n            console.log(\"res:::\",res);\n            if(res){\n                that.showSelectAccount();\n                if (!that.state.showAccountSelect) {\n                    setTimeout(function () {\n                        that.getDetail();\n                        that.getContractSeroBalance();\n\n                    }, 3000)\n                }\n\n                setInterval(function () {\n                    that.getDetail();\n                    that.getContractSeroBalance();\n                    if (that.state.currentAccount.PK) {\n                        that.getAccount(that.state.currentAccount.PK)\n                    }\n                }, 60 * 1000)\n            }\n        });\n    }\n\n    showSelectAccount() {\n\n        if (!this.state.currentAccount.PK) {\n            let pk = localStorage.getItem(\"accountPk\");\n            if (pk) {\n                this.getAccount(pk)\n                this.setState({\n                    loading: false\n                })\n            } else {\n                this.setState({\n                    showAccountSelect: true\n                })\n            }\n        }\n    }\n\n    showDeposit() {\n\n        this.setState({\n            showDeposit: true\n        })\n\n        let canvas = document.getElementById('qrImg')\n        QRCode.toCanvas(canvas, this.state.currentAccount.MainPKr, function (error) {\n            if (error) console.error(error)\n            console.log('success!');\n        })\n    }\n\n    selectAccount = ac => {\n        this.setState({\n            currentAccount: ac,\n            showAccountSelect: false,\n            loading: false\n        });\n        localStorage.setItem(\"accountPk\", ac.PK);\n        window.location.reload();\n\n    }\n\n    hiddenAccount = () => {\n        this.setState({\n            showAccountSelect: false,\n        });\n    }\n\n    onChange = checked => {\n        this.setState({loading: !checked});\n    };\n\n    getContractSeroBalance() {\n        let that = this;\n        that.callMethod(\"balanceOfHAPY\", [], function (res) {\n            if (res) {\n                that.setState({\n                    ct_balanceOfSero: new BigNumber(res, 10).dividedBy(decimal).toFixed(6),\n                })\n            }\n        })\n    }\n\n    //pullup\n    getAccount(pk) {\n        let that = this;\n        seropp.getAccountDetail(pk, function (currentAccount) {\n            let balanceSero = 0;\n            let balanceObj = currentAccount.Balance;\n            balanceObj.forEach(function (value, currency) {\n                if (currency === 'HAPY') {\n                    balanceSero = new BigNumber(value).dividedBy(decimal).toFixed(6);\n                }\n            });\n\n            let data = new identicon(pk, 200).toString();\n            currentAccount[\"avatar\"] = \"data:image/png;base64,\" + data;\n            that.setState({\n                currentAccount: currentAccount,\n                balanceSero: balanceSero,\n            });\n        });\n    }\n\n\n    //=== contract\n\n    getDetail() {\n        let that = this;\n        let res = that.callMethod(\"details\", [], function (res) {\n            let detail = {\n                referId: \"\",\n                largeAreaId: \"\",\n                largeAreaTotal: new BigNumber(\"0\").dividedBy(decimal).toFixed(6),\n                amount: new BigNumber(\"0\").dividedBy(decimal).toFixed(6),\n                returnAmount: new BigNumber(\"0\").dividedBy(decimal).toFixed(6),\n                achievement: new BigNumber(\"0\").dividedBy(decimal).toFixed(6),\n                recommendNum: parseInt(new BigNumber(\"0\").toString(10)),\n                profitLevel: parseInt(new BigNumber(\"0\").toString(10)),\n                value: new BigNumber(\"0\").dividedBy(decimal).toFixed(6),\n                star: parseInt(new BigNumber(\"0\").toString(10)),\n                isKing: false,\n            }\n            if (res !== \"0x0\") {\n                if(res){\n                    let data = res;\n                    detail = {\n                        referId: data[0] == 'JFVVW2ITNSJHF' ? \"\" : data[0],\n                        largeAreaId: data[1] == 'JFVVW2ITNSJHF' ? \"\" : data[1],\n                        largeAreaTotal: new BigNumber(data[2]).dividedBy(decimal).toFixed(6),\n                        amount: new BigNumber(data[3]).dividedBy(decimal).toFixed(6),\n                        returnAmount: new BigNumber(data[4]).dividedBy(decimal).toFixed(6),\n                        achievement: new BigNumber(data[5]).dividedBy(decimal).toFixed(6),\n                        recommendNum: parseInt(new BigNumber(data[6]).toString(10)),\n                        profitLevel: parseInt(new BigNumber(data[7]).toString(10)),\n                        value: new BigNumber(data[8]).dividedBy(decimal).toFixed(6),\n                        star: parseInt(new BigNumber(data[9]).toString(10)),\n                        isKing: data[10],\n                    }\n                }\n\n            }\n            that.callMethod(\"id\", [], function (id) {\n                detail[\"id\"] = (id == \"JFVVW2ITNSJHF\" ? \"\" : id);\n                that.callMethod(\"detailsOfIncome\", [], function (detailsOfIncome) {\n                    detail[\"detailsOfIncome\"] = detailsOfIncome;\n                    that.callMethod(\"calcuStaticProfit\", [], function (calcuStaticProfit) {\n                        if (calcuStaticProfit === '0x') {\n                            calcuStaticProfit = \"0\";\n                        }\n                        detail[\"dayProfit\"] = new BigNumber(calcuStaticProfit).dividedBy(decimal).toFixed(6);\n\n                        that.setState({\n                            ct_details: detail\n                        })\n                    });\n\n                });\n            });\n\n\n        });\n\n    }\n\n    callMethod(_method, args, callback) {\n\n        let packData = contract.packData(_method, args);\n        let callParams = {\n            from: this.state.currentAccount.MainPKr,\n            to: contractAddress,\n            data: packData\n        };\n\n        seropp.call(callParams, function (callData,error) {\n            if(error){\n                console.log(\"error::\",error);\n            }else{\n                let res = contract.unPackData(_method, callData);\n                callback(res);\n            }\n        });\n    }\n\n    executeMethod(_method, args, value, cy, password, callback) {\n        let that = this;\n\n        let packData = contract.packData(_method, args);\n        let executeData = {\n            from: that.state.currentAccount.PK,\n            to: contractAddress,\n            value: \"0x\" + value,//HAPY\n            data: packData,\n            gas_price: \"0x\" + new BigNumber(\"1000000000\").toString(16),\n            cy: cy,\n        };\n        let estimateParam = {\n            from: that.state.currentAccount.MainPKr,\n            to: contractAddress,\n            value: \"0x\" + value,//HAPY\n            data: packData,\n            gas_price: \"0x\" + new BigNumber(\"1000000000\").toString(16),\n            cy: cy,\n        };\n        // executeData[\"gas\"] = pullup.sero.estimateGas(estimateParam);\n        seropp.estimateGas(estimateParam, function (gas,error) {\n            if(error){\n                message.error(error);\n            }else{\n                executeData[\"gas\"] = gas;\n                seropp.executeContract(executeData, function (res) {\n                    callback(res);\n                });\n            }\n        });\n    }\n\n\n    handleCancel = () => {\n        this.setState({\n            showDeposit: false\n        })\n    }\n\n    //====  Invest begin\n    handleInvestCancel = () => {\n        this.setState({showInvest: false});\n    };\n\n    handleInvestCreate = (cb) => {\n        let that = this;\n        const {form} = this.formRef2.props;\n        form.validateFields((err, values) => {\n            if (err) {\n                if (cb) {\n                    cb(false)\n                }\n                return;\n            }\n            let amountSero = form.getFieldValue(\"AmountSero\");\n            let referId = form.getFieldValue(\"ReferId\");\n            let password = form.getFieldValue(\"Password\");\n\n            if (that.state.ct_details.referId) {\n                referId = that.state.ct_details.referId;\n            }\n            if (new BigNumber(amountSero).comparedTo(new BigNumber(this.state.balanceSero)) > 0) {\n                if (cb) {\n                    cb(false)\n                }\n                message.warn(Lang[that.state.lang].toast.lessAmount);\n            }  else if (parseFloat(amountSero) < 100) {\n                if (cb) {\n                    cb(false)\n                }\n                message.warn(Lang[that.state.lang].toast.minInvest);\n            } else {\n                try {\n                    this.executeMethod(\"invest\", [referId], new BigNumber(amountSero).multipliedBy(decimal).toString(16), \"HAPY\", password, function (res) {\n                        if (res) {\n                            form.resetFields();\n                            that.setState({showInvest: false});\n                            setTimeout(function () {\n                                openNotificationWithIcon('success', 'Successful', `${Lang[that.state.lang].toast.tx}${res}`)\n                            }, 3000)\n                        }\n                        if (cb) {\n                            cb(false)\n                        }\n                    });\n                } catch (err) {\n                    if (err) {\n                        message.error(err.message);\n                    } else {\n                        message.error(\"request HAPY Node error:[\" + err.message + \"]\");\n                    }\n                    if (cb) {\n                        cb(false)\n                    }\n                }\n            }\n        });\n    };\n\n    calcuPrincipalProfit = (sero, cb) => {\n        if (sero) {\n            let seroHex = \"0x\" + new BigNumber(sero).multipliedBy(decimal).toString(16);\n            this.callMethod(\"calcuPrincipalProfit\", [seroHex], function (res) {\n                if (cb) {\n                    cb(res);\n                }\n            })\n        }\n    }\n\n    saveInvestFormRef = formRef => {\n        this.formRef2 = formRef;\n    };\n\n    //====  Invest end\n\n    shareProfit() {\n        let that = this;\n        try {\n            this.executeMethod(\"triggerStaticProfit\", [], \"0\", \"HAPY\", '', function (res) {\n                if (res) {\n                    openNotificationWithIcon('success', 'Successful', `${Lang[that.state.lang].toast.tx}${res}`)\n                } else {\n                    if (res.error) {\n                        message.error(res.error.message);\n                    } else {\n                        message.error(\"request HAPY Node error:[\" + res + \"]\");\n                    }\n                }\n            });\n        } catch (err) {\n            if (err) {\n                message.error(err.message);\n            } else {\n                message.error(\"request HAPY Node error:[\" + err.message + \"]\");\n            }\n        }\n\n    }\n\n    withdraw() {\n        let that = this;\n        try {\n            this.executeMethod(\"withdrawBalance\", [], \"0\", \"HAPY\", '', function (res) {\n                if (res) {\n                    openNotificationWithIcon('success', 'Successful', `${Lang[that.state.lang].toast.tx}${res}`)\n                } else {\n                    if (res.error) {\n                        message.error(res.error.message);\n                    } else {\n                        message.error(\"request HAPY Node error:[\" + res + \"]\");\n                    }\n                }\n            });\n        } catch (err) {\n            if (err) {\n                message.error(err.message);\n            } else {\n                message.error(\"request HAPY Node error:[\" + err.message + \"]\");\n            }\n        }\n    }\n\n\n    render() {\n        const {loading, showAccountSelect, currentAccount} = this.state;\n        let accountName = currentAccount.PK;\n        let that = this;\n        let staticReward = that.state.ct_details.detailsOfIncome ? new BigNumber(that.state.ct_details.detailsOfIncome[0]).dividedBy(decimal).toFixed(2) : 0;\n        let recommendReward = that.state.ct_details.detailsOfIncome ? new BigNumber(that.state.ct_details.detailsOfIncome[1]).dividedBy(decimal).toFixed(2) : 0;\n        let nobilityReward = that.state.ct_details.detailsOfIncome ? new BigNumber(that.state.ct_details.detailsOfIncome[2]).dividedBy(decimal).toFixed(2) : 0;\n        let vipReward = that.state.ct_details.detailsOfIncome ? new BigNumber(that.state.ct_details.detailsOfIncome[3]).dividedBy(decimal).toFixed(2) : 0;\n        let staticTimestamp = that.state.ct_details.detailsOfIncome ? that.state.ct_details.detailsOfIncome[5] : 0;\n\n        const salesPieData = [\n            {\n                x: Lang[this.state.lang].account.title.staticReward,\n                y: parseFloat(staticReward),\n            },\n            {\n                x: Lang[this.state.lang].account.title.recommendReward,\n                y: parseFloat(recommendReward),\n            },\n            {\n                x: Lang[this.state.lang].account.title.nobilityReward,\n                y: parseFloat(nobilityReward),\n            },\n            {\n                x: Lang[this.state.lang].account.title.vipReward,\n                y: parseFloat(vipReward),\n            },\n\n        ];\n\n        const showChart = parseFloat(staticReward) > 0 || parseFloat(recommendReward) > 0 || parseFloat(nobilityReward) > 0 || parseFloat(vipReward) > 0\n\n        const countDown = nextShareTime();\n        let totalReturnDay = this.state.ct_balanceOfSero ? new BigNumber(this.state.ct_balanceOfSero).dividedBy(30).toFixed(6) : \"0\";\n        let returnPercent = 0;\n        console.log(\"this.state.ct_details.returnAmount:\",this.state.ct_details.returnAmount);\n        if (this.state.ct_details.returnAmount && parseFloat(this.state.ct_details.returnAmount) > 0) {\n            let a = parseFloat(this.state.ct_details.returnAmount);\n            let b = new BigNumber(this.state.ct_details.amount).multipliedBy(this.state.ct_details.profitLevel).toString(10);\n            returnPercent = (a * 100 / parseFloat(b)).toFixed(2);\n        }\n\n        let showCountDown = new Date(staticTimestamp * 1000).getUTCDate() === parseInt(new Date().getUTCDate());\n        return (\n            <div className=\"App\" style={{marginTop:'80px'}}>\n                <Content style={{padding: '0 8px'}}>\n                    <div style={{background: '#fff', padding: 5, minHeight: document.body.clientHeight}}>\n\n                        <List itemLayout=\"vertical\" size=\"large\" rowKey=\"1\">\n                            <List.Item>\n                                <Skeleton loading={loading} avatar>\n                                    <Descriptions title={\n                                        <h1>{Lang[this.state.lang].account.title.utxo} <Button size=\"small\"\n                                                                                               onClick={() => {\n                                                                                                   this.setState({\n                                                                                                       showAccountSelect: true\n                                                                                                   })\n                                                                                               }}>{Lang[this.state.lang].account.title.swith}</Button>\n                                        </h1>}/>\n                                    <Row>\n                                        <Col span={24}>\n                                            <List.Item.Meta\n                                                avatar={<p><Avatar shape=\"square\" size={64}\n                                                                   src={currentAccount.avatar}/></p>}\n                                                title={\n                                                    <small>{accountName ? accountName.slice(0, 10) + \"...\"+accountName.slice(-10) : \"\"}{this.state.ct_details.isKing ?\n                                                        <Tag color=\"gold\">VIP</Tag> : \"\"}</small>\n                                                }\n                                                description={<Rate count={4}\n                                                                   value={this.state.ct_details.star ? this.state.ct_details.star : 0}\n                                                                   disabled/>}\n                                            />\n                                        </Col>\n\n                                    </Row>\n                                    <Row style={{textAlign: 'center'}}>\n                                        <Col span={12}>\n                                            <Statistic title={Lang[this.state.lang].account.title.balanceSero}\n                                                       value={this.state.balanceSero} precision={6}/>\n                                            <Button style={{marginTop: 16}} type=\"primary\" onClick={() => {\n                                                this.showDeposit()\n                                            }}>{Lang[this.state.lang].account.button.deposit}</Button>\n                                        </Col>\n                                    </Row>\n\n                                </Skeleton>\n                            </List.Item>\n\n                            <List.Item>\n                                <Skeleton loading={loading}>\n                                    <Descriptions title={<h1>{Lang[this.state.lang].account.title.contract}</h1>}/>\n\n                                    <Row style={{textAlign: 'center'}}>\n                                        <Col span={12}>\n                                            <Statistic title={Lang[this.state.lang].account.title.estimatedTotal}\n                                                       value={new BigNumber(this.state.ct_details.amount ? this.state.ct_details.amount : 0).multipliedBy(this.state.ct_details.profitLevel ? this.state.ct_details.profitLevel : 0).toFixed(6)}\n                                                       precision={6}/>\n                                            <Button style={{marginTop: 16}} type=\"primary\" onClick={() => {\n                                                this.setState({showInvest: true})\n                                            }}>{Lang[this.state.lang].account.button.invest}</Button>\n                                        </Col>\n                                    </Row>\n                                    <Row style={{textAlign: 'center'}}>\n                                        <p/>\n                                        <Col span={12}>\n                                            <Statistic title={Lang[this.state.lang].account.title.staticIncome}\n                                                       value={this.state.ct_details.dayProfit} precision={6}/>\n                                            {\n                                                showCountDown ?\n                                                    <Countdown style={{marginTop: 14}} title=\"\" format=\"HH:mm:ss\"\n                                                               value={parseFloat(countDown)} onFinish={() => {\n                                                        this.getDetail()\n                                                    }}/> : <Button style={{marginTop: 16}} type=\"primary\"\n                                                                   disabled={showCountDown} onClick={() => {\n                                                        this.shareProfit()\n                                                    }}>{Lang[this.state.lang].account.button.trigger}</Button>\n                                            }\n                                        </Col>\n                                        <Col span={12}>\n                                            <Statistic title={Lang[this.state.lang].account.title.withdraw}\n                                                       value={new BigNumber(this.state.ct_details.value ? this.state.ct_details.value : 0).toFixed(6)}\n                                                       precision={6}/>\n                                            <Button style={{marginTop: 16}} disabled={new BigNumber(this.state.ct_details.value ? this.state.ct_details.value : 0).comparedTo(0) < 1} type=\"primary\" onClick={() => {\n                                                this.withdraw()\n                                            }}>{Lang[this.state.lang].account.button.withdraw}</Button>\n                                        </Col>\n                                    </Row>\n                                    {\n                                        showChart ?\n                                            <Row style={{textAlign: 'center'}}>\n                                                <Col span={24} style={{textAlign: 'center'}}>\n                                                    <div>\n                                                        {returnPercent > 0 ? <WaterWave height={234}\n                                                                                        title={Lang[this.state.lang].account.title.totalReturn}\n                                                                                        percent={returnPercent}/> :\n                                                            <WaterWave height={234}\n                                                                       title={Lang[this.state.lang].account.title.totalReturn}\n                                                                       percent={0}/>}\n                                                    </div>\n                                                </Col>\n                                                <Col span={24} style={{textAlign: 'left'}}>\n                                                    <Pie\n                                                        hasLegend\n                                                        animate\n                                                        title={Lang[this.state.lang].account.title.totalReturn}\n                                                        subTitle={Lang[this.state.lang].account.title.totalReturn}\n                                                        total={() => (\n                                                            <span\n                                                                dangerouslySetInnerHTML={{\n                                                                    __html: salesPieData.reduce((pre, now) => now.y + pre, 0),\n                                                                }}\n                                                            />\n                                                        )}\n                                                        data={salesPieData}\n                                                        valueFormat={val => <span\n                                                            dangerouslySetInnerHTML={{__html: val}}/>}\n                                                        height={248}\n                                                    />\n                                                </Col>\n                                            </Row> : \"\"\n                                    }\n                                    <Divider dashed={true}/>\n                                    <Row style={{textAlign: 'center'}}>\n                                        <Col span={12}>\n                                            <Statistic title={Lang[this.state.lang].account.title.totalReturnDay}\n                                                       value={totalReturnDay} precision={6}/>\n                                        </Col>\n                                        <Col span={12}>\n                                            <Statistic title={Lang[this.state.lang].account.title.dayIncome}\n                                                       value={this.state.ct_details.dayProfit&&parseFloat(totalReturnDay)>0 ? new BigNumber(this.state.ct_details.dayProfit).multipliedBy(100).dividedBy(totalReturnDay).toFixed(2) : \"0\"}\n                                                       suffix={\"%\"}/>\n                                        </Col>\n\n                                    </Row>\n                                    <Row style={{textAlign: 'center'}}>\n                                        <p/>\n                                        <Col span={12}>\n                                            <Statistic title={Lang[this.state.lang].account.title.areaTotal}\n                                                       value={this.state.ct_details.largeAreaTotal} precision={6}/>\n                                        </Col>\n                                        <Col span={12}>\n                                            <Statistic title={Lang[this.state.lang].account.title.areaOtherTotal}\n                                                       value={new BigNumber(this.state.ct_details.achievement).minus(new BigNumber(this.state.ct_details.largeAreaTotal)).toFixed(6)}\n                                                       precision={6}/>\n                                        </Col>\n                                    </Row>\n                                </Skeleton>\n                            </List.Item>\n\n                            <List.Item>\n                                <Skeleton loading={loading}>\n                                    <Descriptions title={<h1>{Lang[this.state.lang].project.title}</h1>}>\n                                        <Descriptions.Item label={Lang[this.state.lang].project.contractAddress}>\n                                            <small>{contractAddress}</small>\n                                        </Descriptions.Item>\n                                    </Descriptions>\n\n                                    <Divider dashed={true}/>\n                                    <Descriptions title={Lang[this.state.lang].account.title.investDetail}>\n                                        <Descriptions.Item\n                                            label={Lang[this.state.lang].account.title.id}>{this.state.ct_details.id}</Descriptions.Item>\n                                        <Descriptions.Item\n                                            label={Lang[this.state.lang].account.title.referId}>{this.state.ct_details.referId}</Descriptions.Item>\n                                        <Descriptions.Item\n                                            label={Lang[this.state.lang].account.title.areaId}>{this.state.ct_details.largeAreaId}</Descriptions.Item>\n                                        <Descriptions.Item\n                                            label={Lang[this.state.lang].account.title.totalInvest}>{this.state.ct_details.amount}</Descriptions.Item>\n                                        <Descriptions.Item\n                                            label={Lang[this.state.lang].account.title.profitLevel}>{this.state.ct_details.profitLevel}</Descriptions.Item>\n                                        <Descriptions.Item\n                                            label={Lang[this.state.lang].account.title.latestTime}>{convertUTCDate(staticTimestamp)}</Descriptions.Item>\n                                    </Descriptions>\n                                </Skeleton>\n                            </List.Item>\n\n                        </List>\n                    </div>\n                </Content>\n\n                <SelectAccount visible={showAccountSelect} selectAccount={this.selectAccount}\n                               hiddenAccount={this.hiddenAccount}/>\n\n                <Modal\n                    title={Lang[this.state.lang].account.modal.deposit.title}\n                    visible={this.state.showDeposit}\n                    onCancel={this.handleCancel}\n                    footer={null}\n                    getContainer={false}\n                >\n                    <div style={{textAlign: \"center\"}}>\n                        <canvas id=\"qrImg\"></canvas>\n                        <p style={{wordBreak: 'normal', whiteSpace: 'pre-wrap', wordWrap: 'break-word'}}>\n                            <small>{this.state.currentAccount.MainPKr}</small></p>\n                        <Button className='copyTxt' onClick={() => {\n                            copy(this.state.currentAccount.MainPKr);\n                            message.success('Copy to clipboard successfully');\n                        }}>{Lang[this.state.lang].account.modal.deposit.copy}</Button>\n                    </div>\n                </Modal>\n\n                <InvestForm\n                    wrappedComponentRef={this.saveInvestFormRef}\n                    visible={this.state.showInvest}\n                    onCancel={this.handleInvestCancel}\n                    onCreate={this.handleInvestCreate}\n                    sero={this.state.balanceSero}\n                    calcuPrincipalProfit={this.calcuPrincipalProfit}\n                    rate={this.state.ct_rate}\n                    lang={this.state.lang}\n                    totalAmount={this.state.ct_details.amount}\n                    referId={this.state.ct_details.referId}\n                />\n\n            </div>\n        );\n    }\n}\n\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            locale: zhCN,\n        };\n    }\n\n    componentWillMount() {\n        let lang = localStorage.getItem(\"lang\");\n        let locale = zhCN;\n        if (lang) {\n            if (lang === \"zh_CN\") {\n                locale = zhCN;\n            } else if (lang === \"en_US\") {\n                locale = enUS;\n            }\n        } else {\n            locale = zhCN;\n            localStorage.setItem(\"lang\", \"zh_CN\");\n        }\n\n        this.setState({\n            locale: locale\n        })\n    }\n\n    changeLocale = e => {\n        const localeValue = e.target.value;\n        this.setState({locale: localeValue});\n        if (localeValue.locale === \"en\") {\n            localStorage.setItem(\"lang\", \"en_US\");\n        } else if (localeValue.locale === \"zh-cn\") {\n            localStorage.setItem(\"lang\", \"zh_CN\");\n        }\n    };\n\n    render() {\n        const {locale} = this.state;\n        return (\n            <div className=\"App\">\n                <Layout className=\"layout\">\n                    <Header className=\"header\">\n                        <div className=\"logo\"><img src={logo}/></div>\n                        <div className=\"change-locale\">\n                            <Radio.Group value={locale} onChange={this.changeLocale}>\n                                <Radio.Button key=\"en\" value={enUS}>\n                                    English\n                                </Radio.Button>\n                                <Radio.Button key=\"cn\" value={zhCN}>\n                                    中文\n                                </Radio.Button>\n                            </Radio.Group>\n                        </div>\n                    </Header>\n\n                    <ConfigProvider locale={locale}>\n                        <ContentPage key={locale ? locale.locale : 'en'}/>\n                    </ConfigProvider>\n                    <Footer style={{textAlign: 'center'}}/>\n                </Layout>\n            </div>\n        );\n    }\n}\n\nfunction convertUTCDate(dateTimestamp) {\n    if (dateTimestamp && dateTimestamp > 0) {\n        let cDate = new Date(dateTimestamp * 1000);\n        return appendZero(cDate.getMonth() + 1) + \"/\" + appendZero(cDate.getDate()) + \" \" + appendZero(cDate.getHours()) + \":\" + appendZero(cDate.getMinutes());\n    }\n    return \"\"\n}\n\nfunction nextShareTime() {\n    let d = new Date();\n    d.setTime(d.getTime() + 24 * 60 * 60 * 1000);\n    let year = d.getUTCFullYear();\n    let month = d.getUTCMonth();\n    let day = d.getUTCDate();\n    d = new Date(year, month, day, 0, 0, 0);\n\n    let tz = new Date().getTimezoneOffset() / 60;\n    return d.getTime() + (-tz) * 60 * 60 * 1000;\n}\n\nfunction appendZero(i) {\n    i = i < 10 ? \"0\" + i : i;\n    return i;\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}